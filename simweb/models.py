# -*- coding: utf-8 -*-
# Started by Alan
# MainTained by Alan
# Contact: alan@sinosims.com

from sqlalchemy import Column, Integer, String
from simweb.libs.database import Base    

class User(Base):
    # User Model inherit from RedisHash and map to MySQL table user
    #   MySQL
    #       @key id:            uuid.uuid1() generated, unique in whole system
    #       @key login:         Login str post by user, should be unique in whole system, email or phone number is better
    #       @key pwd:           Password str post by user, should be encrypted by sha1 or md5
    #       @key created_at:    Register time for user
    #
    #   CREATE TABLE
    #       create table user( `id` varchar(32) not null primary key,
    #                          `login` varchar(255) not null unique key,
    #                          `pwd` varchar(255) not null,
    #                           `created_at` int(11) not null)engine=innodb default charset=utf8;
    #   INSERT ROW
    #       insert into user(id, login, pwd, created_at) values('0f9c509afcd711e383b700163e0212e4', 'crane', '123456', '1402332329');

    __tablename__ = 'user'
    id = Column(String(32), primary_key=True)
    login = Column(String(120), unique=True)
    pwd = Column(String(120))
    created_at = Column(Integer)

    def __init__(self, id=None, login=None, pwd=None, created_at=None):
        self.id, self.login, self.pwd, self.created_at = id, login, pwd, created_at

    def __repr__(self):
        return '[User %r]' % (self.login)

class Call(Base):
    # Call Model inherit from RedisHash and map to MySQL table call  
    #   MySQL
    #       @key id:        varchar(32)     Sequence id generated by phone or chip
    #       @key cdid:      varchar(32)     ID of SIM Card, None if PSTN
    #       @key cpid:      varchar(32)     ID of the Chip
    #       @key bid:       varchar(32)     ID of the Box which contains the Chip
    #
    #       @key uid:       varchar(32)     ID of user who uses chip
    #       @key oth:       varchar(40)     Other's Phone Number
    #       @key typ:       tinyint(2)      Chip is host or guest, 0 means host, 1 means guest
    #       @key rid:       varchar(32)     Record id of this call
    #       @key st:        int(11)         Starting Timestamp
    #       @key ed:        int(11)         Ending Timestamp
    #
    #   CREATE TABLE
    #       create table call( `id`   varchar(32) not null primary key, 
    #                          `cdid` varchar(32) not null,
    #                          `cpid` varchar(32) not null,
    #                          `bid`  varchar(32) not null,
    #                          `uid`  varchar(32),
    #                          `oth`  varchar(32) not null,
    #                          `typ`  tinyint(2) not null default 0, 
    #                          `rid`  varchar(32),
    #                          `st`   int(11) not null,
    #                          `ed`   int(11) not null)engine=innodb default charset=utf8;
    #   INSERT ROW
    #       insert into call(id, cdid, cpid, bid, uid, oth, typ, rid, st, ed) values('111', '460001833120647', '123456', 'device1234', 'f5a489ab08c811e48001705681b9b157', '+8613715054882', 0, 'record1', '1402332329', '1402332440');

    __tablename__ = 'call'
    id = Column(String(32), primary_key=True)
    cdid = Column(String(120))
    cpid = Column(String(120))
    bid = Column(String(120))
    uid = Column(String(120))
    oth = Column(String(120))
    typ = Column(Integer)
    rid = Column(String(120))
    st = Column(Integer)
    ed = Column(Integer)

    def __init__(self, id=None, cdid=None, cpid=None, bid=None, uid=None, oth=None, typ=None, rid=None, st=None, ed=None):
        self.id, self.cdid, self.cpid, self.bid, self.uid, self.oth, self.typ, self.rid, self.st, self.ed = id, cdid, cpid, bid, uid, oth, typ, rid, st, ed

    def __repr__(self):
        return '[Call %r]' % (self.id)
